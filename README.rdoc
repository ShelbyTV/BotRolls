== BotRolls for GT::Shelby.tv

*BotRolls* is a project aimed to auto-populate rolls based on a theme or search query

*MAY 2014 UPDATE*
They are run on the utils server (`198.101.158.13`) via a master process for youtube feeds and on an individual basis for blogs and other rss feeds.
Processes are kicked off via crontab, eg
`*/10 * * * * /bin/bash -l -c 'rvm use ruby-1.9.3-p392 && ruby /home/gt/utils/BotRolls/blogs/cheezeburger-icanhas.rb' >/home/gt/logs/icanhas-feed.log 2>&1`
or
`*/10 * * * * /bin/bash -l -c 'rvm use ruby-1.9.3-p392 && ruby /home/gt/utils/BotRolls/youtube/youtube.feed.master.rb' >/home/gt/logs/yt-feeds.log 2>&1`

Sources include:
- RSS Feeds
- Twitter Search

Currently, video found in RSS Feeds is tweeted out from various, appropriate, twitter accounts that are also shelby "users".  Video found via twitter search results are fed directly into Shelby via our API.

When video is added via Twitter, oauth token/secret are used.
When video is added via the Shelby API, the roll id (where the video is being added) and the users auth token are provided.
(all this info is located in feeds.yml)

rss.feeds.rb and twitter.search.feeds.rb are run via cron jobs at various frequencies depending on what type of content is being gotten.

rss.feeds.rb takes one argument: the feed name being retrieved, e.g. surfing_roll

ex: ruby rss.feeds.rb surfing_roll

twitter.search.feeds.rb takes two arguments:
- the search term name being retrieved, e.g. nowplaying (the actual search term is gotten in the feeds.yml file)
- the number of results requested per page form the twitter search api (OPTIONAL, default is 20)
	
ex: ruby twitter.search.feeds.rb nowplaying 5
